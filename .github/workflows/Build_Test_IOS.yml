name: Create TF Build - IOS

on:
  workflow_dispatch: {}
  
jobs:
  buildForiOSPlatform:
    name: Build for iOS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-iOS

      #BUILD
      - uses: game-ci/unity-builder@v2
        id: buildIOS
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: iOS
          #buildName: AutoBuild-${{ github.event.repository.name }}-IOS

      - uses: actions/upload-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

  exportPackage:
    name: Export IPA
    runs-on: macos-latest
    needs: buildForiOSPlatform
    steps:

        #checkout
      - name: Checkout Repository
        uses: actions/checkout@v2

        #dir check
      - name: Dir Check
        run: |
            echo -List Directory-
            ls -a

        #install ruby
      - name: Set up Ruby
        uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
        with:
          ruby-version: '3.1'

        #install bundles
      - name: Init bundles
        run: bundle install

      - name: Download iOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-iOS
          path: build/iOS

      - name: Fix File Permissions and Run fastlane
        env:
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_P8: ${{ secrets.APPSTORE_P8 }}

          APPLE_CONNECT_EMAIL: ${{ secrets.APPLE_CONNECT_EMAIL }}
          APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}

          MATCH_REPOSITORY: ${{ secrets.MATCH_REPOSITORY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

          IOS_BUILD_PATH: ${{ format('{0}/build/iOS', github.workspace) }}
          IOS_BUNDLE_ID: com.cubegame.dragking # Change it to match your Unity bundle id
          PROJECT_NAME: Drag King # Change it to match your project's name
        run: |
          find $IOS_BUILD_PATH -type f -name "**.sh" -exec chmod +x {} \;
          #bundle install
          fastlane add_plugin github_action
          #brew install libsodium
          #bundle exec fastlane ios init_ci
          bundle exec fastlane ios build

        #final check
      - name: Build reach to end
        run: |
            echo -END-

      - name: Cleanup to avoid storage limit
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: build-iOS